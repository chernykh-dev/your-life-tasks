// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using YourLifeTasks.Infrastructure.Db;

#nullable disable

namespace YourLifeTasks.Infrastructure.Migrations
{
    [DbContext(typeof(TasksDbContext))]
    [Migration("20250129180132_AddPriorityToUserTask")]
    partial class AddPriorityToUserTask
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("YourLifeTasks.Domain.Entities.UserTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean")
                        .HasColumnName("completed");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<double>("Priority")
                        .HasColumnType("double precision")
                        .HasColumnName("priority");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<Guid>("UserTasksGroupId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_tasks_group_id");

                    b.HasKey("Id")
                        .HasName("pk_user_tasks");

                    b.HasIndex("UserTasksGroupId")
                        .HasDatabaseName("ix_user_tasks_user_tasks_group_id");

                    b.ToTable("user_tasks", (string)null);
                });

            modelBuilder.Entity("YourLifeTasks.Domain.Entities.UserTasksGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_user_tasks_groups");

                    b.ToTable("user_tasks_groups", (string)null);
                });

            modelBuilder.Entity("YourLifeTasks.Domain.Entities.UserTask", b =>
                {
                    b.HasOne("YourLifeTasks.Domain.Entities.UserTasksGroup", "UserTasksGroup")
                        .WithMany("UserTasks")
                        .HasForeignKey("UserTasksGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_tasks_user_tasks_groups_user_tasks_group_id");

                    b.Navigation("UserTasksGroup");
                });

            modelBuilder.Entity("YourLifeTasks.Domain.Entities.UserTasksGroup", b =>
                {
                    b.Navigation("UserTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
